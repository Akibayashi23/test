const CryptoJS = require("crypto-js");

// 鍵とIVの生成
function generateKeyAndIV() {
  const key = CryptoJS.lib.WordArray.random(16); // 16バイトのランダム鍵を生成
  const iv = CryptoJS.lib.WordArray.random(16); // 16バイトのランダムIVを生成
  return { key, iv };
}

// 暗号化
function encrypt(text) {
  const { key, iv } = generateKeyAndIV();
  const encrypted = CryptoJS.AES.encrypt(text, key, { iv: iv });
  return {
    key: key.toString(),
    iv: iv.toString(),
    encryptedText: encrypted.toString()
  };
}

// 復号化
function decrypt(encryptedData) {
  const key = CryptoJS.enc.Hex.parse(encryptedData.key); // 鍵を復元
  const iv = CryptoJS.enc.Hex.parse(encryptedData.iv); // IVを復元
  const decrypted = CryptoJS.AES.decrypt(encryptedData.encryptedText, key, { iv: iv });
  return decrypted.toString(CryptoJS.enc.Utf8);
}

// 使用例
const dataToEncrypt = "Hello, World!";

// データを暗号化
const encryptedData = encrypt(dataToEncrypt);
console.log("Encrypted Data:", encryptedData);

// データを復号化
const decryptedData = decrypt(encryptedData);
console.log("Decrypted Data:", decryptedData);