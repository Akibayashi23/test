https://qiita.com/kojimadev/items/e29f56a241f502e54131
https://note.com/kojimadev/n/n523c21870347
https://qiita.com/kojimadev/items/5d0e03f3367eddc4fa67

モブプロ
手戻り削減の効果を活かすために、ペアプロ・モブプロは「対応方針が複数あり、手戻りが発生しやすいタスク」が効果的だと思います。
逆に、「対応方針が決まっており、手戻りが発生しづらいタスク」には不向きです。

ペアプロ・モブプロ開始時に、参加者全員で以下を共有します。
* タスクの目的・ゴール
* 残りの作業と進める順序



ペアプロ・モブプロに慣れていないうちは、ナビゲーターがどう指示すべきか詰まった時などに、黙ってしまう事があります。 そうなるとドライバーは、何に悩んでいるか分からず指示待ちになってしまうので、そうならないように、自分が何に悩んでどう考えているかを話しましょう。
悩んでいる内容を話せば、それを共有して皆で議論して結論を出す事ができます。 一人の頭の中で考えるより、人に説明して問題を言語化した方が、問題が整理される上に、他の人からの意見ももらえるので効率的ですし、黙って考えるより楽しいです。
また、熟練者の場合は、どう考えてどう判断するのか、その思考プロセスが言語化される事は、それを聞いている他メンバーに大きな学びになるので、メンバーの成長という意味でも価値があります。


「なんとなく判断してしまう」という問題は、ペアプロ・モブプロで「判断の理由を必ず言語化する」を徹底する事で解消されます。


答えを教えるのでなく質問する事で、自分なりに考えて自分で答えにたどり着いてもらう方法として「コーチングプログラミング」と名付けた方法を実践

熟練者と初級者の組み合わせのようにスキルに差がある場合に、スキルの低い側の人が開発に貢献する発言を思いつかず、あまりしゃべらなくなってしまう事があります。



逆に、スキルが低い側の人は、ペアプロ・モブプロを成長の機会と捉え、積極的に質問しましょう。
例えば、以下のような理由を確認する質問は、とても効果的です。
「なぜXXXの処理をする必要があるのでしょうか？」
「YYYという実現方法もあると思うのですが、なぜZZZの方法を選んだのでしょうか？」


基本的にドライバーとナビゲーターは交代しながらやりますが、経験が乏しかったり対象のドメインに対する知識が少ない人は、優先的にドライバーになることを推奨します。

1時間ごとに10分の休憩を推奨



気付いた事や思った事を発言する事は、チームにとって価値があるという事を浸透させて発言のハードルを下げ、新人でも気軽に意見が言える環境を作ることが大切です。
